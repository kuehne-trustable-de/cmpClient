package de.trustable.cmp.client.cmpClient;

import de.trustable.cmp.client.ProtectedMessageHandler;
import org.bouncycastle.asn1.ASN1Primitive;
import org.bouncycastle.asn1.cmp.PKIBody;
import org.bouncycastle.asn1.cmp.PKIMessage;
import org.bouncycastle.asn1.cmp.PKIMessages;
import org.bouncycastle.asn1.crmf.CertReqMessages;
import org.bouncycastle.asn1.crmf.CertReqMsg;
import org.bouncycastle.asn1.x500.X500Name;
import org.bouncycastle.asn1.x509.Extension;
import org.bouncycastle.asn1.x509.Extensions;
import org.bouncycastle.cert.cmp.CMPException;
import org.bouncycastle.cert.cmp.ProtectedPKIMessage;
import org.bouncycastle.cert.cmp.ProtectedPKIMessageBuilder;
import org.bouncycastle.cert.crmf.CRMFException;
import org.bouncycastle.pkcs.PKCS10CertificationRequest;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Base64;


class CMPClientImplTest {


    static final String TEST_CSR = "-----BEGIN CERTIFICATE REQUEST-----\n" +
            "MIIE2zCCAsMCAQAwRDELMAkGA1UEBhMCREUxFDASBgNVBAMMC2hvc3QuZGV2ZW52\n" +
            "MR8wHQYDVQQKDBZ0cnVzdGFibGUgc29sdXRpb25zIFVHMIICIjANBgkqhkiG9w0B\n" +
            "AQEFAAOCAg8AMIICCgKCAgEAz2xfb/4zC3dRGRBrFKFyyo23laKogp+8uu4I8yT7\n" +
            "1eVm6dhxnYZkeFFr7Xu3BgEqcL7oQIVRhoH3wAG25B/Y14MGgZWQBklK7CKqL7ZF\n" +
            "EmZnEK5IWSCrj0kHQ9TDW2BM1+gzeSH0Px3Zw94mtkDe02SuIkJyuzrFhQlnMuwC\n" +
            "7RbDMLyKERznZm1/4JyeMV3vCCzjzqISllhFz3sBMvDGUtVSWsdnyiujAh5ysm8d\n" +
            "o1UVpV4DasahW8JE6dDucJmTb2B8J8Ueyhi84xI0Yf8v6UsLKNGvqjlNV9IKj0Bk\n" +
            "O8Drt00H1XOe1L/tniA60sn8o1coB2GecE+cVsT9CN7eAkmdVrJPPLhFCjJT6+nV\n" +
            "CXzVUFSk5xRYVs0bQZsd3lcfnulUEcsb6PCrxyTGW8+DGAOZu0FLZ1nt3cZ3P/4O\n" +
            "wa27YQUvpfR+B0Qh4yxsYesDTRrUwRPr2F1ceo9PkV2+Xxqq9o4zEEqx3mlPLrV4\n" +
            "78iFHfb92iXzh7xxhXs4GYnhYAV0HfOUFAWUwzd67N5DDNdRBLxv7mpCaBErBlNa\n" +
            "+WQ8l5urBo7QYr+Ca9EvZ/g6iW+mGJQcvrTyH+LUqD/VBVc6ESZTWNF/4IzyYD4s\n" +
            "uN5zs5MueDURAbDfZ2UuwFUw1r1N72pNbcVmngsNurvGkxEym55y5Xbtf2l3I14q\n" +
            "380CAwEAAaBSMFAGCSqGSIb3DQEJDjFDMEEwGgYDVR0RBBMwEYIPd3d3Lmhvc3Qu\n" +
            "ZGV2ZW52MA4GA1UdDwEB/wQEAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDATANBgkq\n" +
            "hkiG9w0BAQsFAAOCAgEAEijox+CtIX+M5zU8wzfz4lpUTBbXsk2BZMNnR35Hk9wv\n" +
            "1lLfqna6crAZxQ35t08QkDi1spXzJEimibNqjxUOJlM51GUyib0FpLmeg/cIZPNm\n" +
            "2VJgDfqL9Yjqkauo2owFmvQ7eXP0rPnVVSnbi2WuhbWWSkgfhMGfMuZqIiqynV9G\n" +
            "CAOtTrpoAwu/WARr7XO/jzvd/7o6gxLicLhvk/TZfMBiOcs0mXQjl49nOsMMQ28l\n" +
            "oRO1k+j0npft6Rgq2l1o4Y/FLTVLmBAVivwLRAHZjzOukffK3NJjzwH0LbNjFd5g\n" +
            "AnYdwEG9fjupGiEqHg/SAfp7XpxbualyWq6dWEufLJo2W8pkbLtusPsfc9gcxtXq\n" +
            "Z/k8l/2VwNVMB6NISJeJDHYTKwnXUf5dqY/eZn0sDP1l8THi/8tyGaIJTnt4bPIa\n" +
            "mG5fR5HbXRQIteAlg945MaVQmgaTl//DJqBsrmorD66aajaKavgoB5Sten+cJo4B\n" +
            "c/uJELxv+Be5f/LVgK5HjAjG3nwpdt4F8BgAFpxqCVXeZjpy0oyCoMTOU2+V7mot\n" +
            "5vEAgTpZKch0iekdWTVS9haPeXIfCEQ+AH73riOkujxpOMAoVb/ApQGSRBV2knlU\n" +
            "n9PwHgI8HY+TTKbciubS5HOyPWHYLdDgaojQKIatkhqGnjXj12iHc6w1FjihRsc=\n" +
            "-----END CERTIFICATE REQUEST-----";

//    static final String TEST_PKI_MESSAGES ="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";
//    static final String TEST_CMP_CERT_RESPONSE = "";

    static final String TEST_PKI_MESSAGES ="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";
    static final String TEST_CMP_CERT_RESPONSE = "";

    static final String TEST_CMP_ERR_REQUEST ="MIID0DCCAR0CAQKkTjBMMQswCQYDVQQGEwJERTEUMBIGA1UEAwwLZm9vLmJhci5iYXoxJzAlBgkqhkiG9w0BCQEWGGZvby5iYXIuYmF6QHRydXN0YWJsZS5kZaQCMACgERgPMjAyNDA1MDUxMzA3NDZaoUAwPgYJKoZIhvZ9B0INMDEEFDAp5WzDnBF5LNEjSfI8hOryXNu4MAcGBSsOAwIaAgID6DAMBggrBgEFBQgBAgUAohsEGWtleUlkLTUxMzI2MzkyNDM3MDAwMzY1NjakIwQhdHJhbnNhY3Rpb25JZC01MTMyNjM5MjQzNzAwMDM2NTY2pRsEGW5vbmNlLTUxMzI2MzkyNDM3MDAwMzY1NjaoEDAOMAwGCCsGAQUFBwQNBQCiggKSMIICjjCCAoowggKEAghAxiAMkKfsNTCCAnalTjBMMQswCQYDVQQGEwJERTEUMBIGA1UEAwwLZm9vLmJhci5iYXoxJzAlBgkqhkiG9w0BCQEWGGZvby5iYXIuYmF6QHRydXN0YWJsZS5kZaaCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMIoNXJr16qgi/TdZsZNDLUvmef/afzgwDS2HOe08/hJQ53lQcY4wFW+JNIvoaoHZFfnXgQiimENM3Q47IUSjx9j9+6qK7aHq6rTG4Pcqlc5yUfbHbX0YWAsFG9M9dzYH9uq4SIE5pzUM1JAWOMZ86hsNB1tGn9bVsx4XF+o8ujDPIkhYB+jH38rN0NrGWEDtMZYpP6/envDC8byHBF5XwZhTWW58iMyF/8k0AlpBjAnthzhulxI8ABpCT0gwYOygYGlXINC4WCf6B8lBsM0gUibE+Lmzle96rcYkPTjNiRMP2Mdpe9jWxPH54t4V1mLa8pxCy4b3FfFDRiyE1AvNg1hfdVZwOeihlApJiZ0qpkiuJHxpiIkVJjvoKAu+z7YxFXr8UeUFktED42FTv1FZGNfeZGxRfWDbsKDQ5bEG+kyxOddg6GX1+OK0offwiHXp1zyucAnCW86axhqyITAKs25elxmZMGdd3FvHW1pGYW4e6EENy6Q3xWoPDpEg5kX9yyBbqGI8XdkiX3S4tkK/DLMqFvjJumWhPfnziGKzNVfKJxk0rzs8ikRtteFQgb1/9SMGr1Df3VwM65Y3fF61TIDbJWiu+z571TYrpZqPjaKjS93Azobiu6FaBiSKSuc1AGjN6ugn5p4nczQDh9heP8JXt/MCABy4oFNwKyc1XyzAgMBAAGAAKAXAxUAGyTUmunWmarrudF+8ZU0OywUnFg=";

    static final String TEST_CMP_ERR_RESPONSE = "MIIBLTCBwAIBAqQCMACkTjBMMQswCQYDVQQGEwJERTEUMBIGA1UEAwwLZm9vLmJhci5iYXoxJzAlBgkqhkiG9w0BCQEWGGZvby5iYXIuYmF6QHRydXN0YWJsZS5kZaARGA8yMDI0MDUwNTEzMDgwMFqkIwQhdHJhbnNhY3Rpb25JZC01MTMyNjM5MjQzNzAwMDM2NTY2pRIEEMpS1vFHiBUCK7YktMxPGs6mGwQZbm9uY2UtNTEzMjYzOTI0MzcwMDAzNjU2NrdoMGYwZAIBAjBbDFlGYWlsZWQgdG8gdmVyaWZ5IG1lc3NhZ2UgdXNpbmcgYm90aCBHbG9iYWwgU2hhcmVkIFNlY3JldCBhbmQgQ01QIFJBIEF1dGhlbnRpY2F0aW9uIFNlY3JldAMCBSA=";

    CMPClientImpl cmpClient;

    PKCS10CertificationRequest p10TestReq;

    @BeforeEach
    void setUp() throws GeneralSecurityException {


        ProtectedMessageHandler messageHandler = new ProtectedMessageHandler(){
            @Override
            public ProtectedPKIMessage signMessage(ProtectedPKIMessageBuilder builder) throws GeneralSecurityException {
                return null;
            }

            @Override
            public boolean verifyMessage(ProtectedPKIMessage message) throws GeneralSecurityException {
                return true;
            }

            @Override
            public X500Name getSender(X500Name subjectDN) {
                return null;
            }

            @Override
            public void addCertificate(ProtectedPKIMessageBuilder pbuilder) {

            }
        };

        CMPClientConfig cmpClientConfig = new CMPClientConfig();
        cmpClientConfig.setMultipleMessages(false);
        cmpClientConfig.setMessageHandler(messageHandler);
        cmpClient = new CMPClientImpl(cmpClientConfig);

        p10TestReq = cmpClient.convertPemToPKCS10CertificationRequest(new ByteArrayInputStream(TEST_CSR.getBytes()));
    }

    @Test
    void buildCertRequest() throws GeneralSecurityException {

        ProtectedMessageHandler protectedMessageHandler = new DigestSigner("hmacSecret");

        PKIMessage pkiMessage = cmpClient.buildCertRequest(999L,  p10TestReq,  protectedMessageHandler);
        Assertions.assertNotNull(pkiMessage);

        Assertions.assertEquals(2, pkiMessage.getHeader().getPvno().intValueExact());
        Assertions.assertNotNull(pkiMessage.getHeader().getSender());
        Assertions.assertNotNull(pkiMessage.getHeader().getTransactionID());
        Assertions.assertNotNull(pkiMessage.getHeader().getRecipient());

        Assertions.assertEquals(PKIBody.TYPE_CERT_REQ, pkiMessage.getBody().getType());

        CertReqMessages certReqMessages = (CertReqMessages)pkiMessage.getBody().getContent();

        CertReqMsg certReqMsg = certReqMessages.toCertReqMsgArray()[0];

        Assertions.assertNotNull(certReqMsg.getCertReq().getCertTemplate().getExtensions());
        Extensions extensions = certReqMsg.getCertReq().getCertTemplate().getExtensions();
        Extension extensionSAN = extensions.getExtension(Extension.subjectAlternativeName);
        Assertions.assertNotNull(extensionSAN);

        // General Nme 'DNS:www.host.devenv'
        byte[] octets = {48, 17, -126, 15, 119, 119, 119, 46, 104, 111, 115, 116, 46, 100, 101, 118, 101, 110, 118};
        Assertions.assertArrayEquals(octets, extensionSAN.getExtnValue().getOctets());

    }

    @Test
    void parseCertRequest() throws GeneralSecurityException, IOException, CMPException, CRMFException {

        final ASN1Primitive derObject = cmpClient.getDERObject(Base64.getDecoder().decode(TEST_PKI_MESSAGES));

        final PKIMessages pkiMessages = PKIMessages.getInstance(derObject);
        PKIMessage[] pkiMessageArr = pkiMessages.toPKIMessageArray();
        CMPClientImpl.CertificateResponseContent certificateResponseContent = cmpClient.readCertResponse(Base64.getDecoder().decode( TEST_CMP_CERT_RESPONSE), pkiMessageArr[0]);

        Assertions.assertNotNull(certificateResponseContent);
        Assertions.assertNotNull(certificateResponseContent.getCreatedCertificate());

        Assertions.assertNotNull(certificateResponseContent.getAdditionalCertificates());
        Assertions.assertEquals(3, certificateResponseContent.getAdditionalCertificates().size());

        Assertions.assertNotNull(certificateResponseContent.getMessage());
        Assertions.assertEquals("", certificateResponseContent.getMessage());
    }

    @Test
    void parseCertErrResponse() throws GeneralSecurityException, IOException, CMPException, CRMFException {

        final ASN1Primitive derObject = cmpClient.getDERObject(Base64.getDecoder().decode(TEST_CMP_ERR_REQUEST ));

        PKIMessage.getInstance(derObject);

        final PKIMessage pkiMessage = PKIMessage.getInstance(derObject);
        try {
            CMPClientImpl.CertificateResponseContent certificateResponseContent = cmpClient.readCertResponse(Base64.getDecoder().decode(TEST_CMP_ERR_RESPONSE), pkiMessage);
            Assertions.fail("Expecting a GeneralSecurityException on erroer response");
        } catch(GeneralSecurityException ge){
            Assertions.assertEquals( "StatusInfo :#0: Failed to verify message using both Global Shared Secret and CMP RA Authentication Secret", ge.getMessage());
        }
    }




}